@page  "/Product/CadProduct"
@using System.Net.Http
@inject HttpClient Http
@inject NavigationManager NavigationManager

<div class="card m-3">
    <h4 class="card-header">Cadastro do Produto</h4>
    <div class="card-body">
        <EditForm Model="@product" OnValidSubmit="HandleValidSubmit" @onreset="HandleReset">
            <DataAnnotationsValidator />
            <div class="form-row">
                <div class="form-group col-5">
                    <label>Produto</label>
                    <InputText @bind-Value="product.Name" class="form-control" />
                    <ValidationMessage For="@(() => product.Name)" />
                </div>
                <div class="form-group col-5">
                    <label>Descrição do produto</label>
                    <InputText @bind-Value="product.Description" class="form-control" />
                    <ValidationMessage For="@(() => product.Description)" />
                </div>
                <div class="form-group col">
                    <label>Valor do produto</label>
                    <InputText @bind-Value="product.Value" class="form-control" />
                    <ValidationMessage For="@(() => product.Value )" />
                </div>
            </div>
            <div class="text-center">
                <button type="submit" class="btn btn-primary mr-1">Salvar</button>
                <button type="reset" class="btn btn-secondary">Cancel</button>
            </div>
        </EditForm>
    </div>
</div>

@code {

    private Product product = new Product();
    
    private EditContext editContext { get; set;}

    private async Task HandleValidSubmit()
    {
        //Enviar dados para o Controller no Backend
        var teste = await Http.PostAsJsonAsync("/Product/Create", product);
        NavigationManager.NavigateTo("Product/ListProduct");

    }

    private void HandleReset()
    {
        product = new Product();
        editContext = new EditContext(product);
    }

    

}